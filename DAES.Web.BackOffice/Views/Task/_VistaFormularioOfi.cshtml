<!--INI-->
@model DAES.Web.BackOffice.Controllers.TaskModel

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<title> Editor </title>

<style type="text/css">
    .editable {
        border: 1px solid #ccc;
        padding: 10px;
        max-width: 100%;
        width: 500px;
        height: auto;
        display: block;
        word-wrap: break-word;
        margin-bottom: 20px;
    }

    .editable2 {
        border: 1px solid #ccc;
        padding: 10px;
        max-width: 100%;
        width: 500px;
        height: 200px;
        display: block;
        word-wrap: break-word;
        margin-bottom: 20px;
        overflow: auto;
    }

    .tooltip {
        display: none;
        position: absolute;
        z-index: 10;
        box-shadow: 3px 2px 10px 1px #b0b0b0;
    }

    .rich-text-content div {
        margin-bottom: 10px;
    }

    .rich-text-content br {
        display: block;
        content: "";
        margin-bottom: 10px;
    }

    .miTabla {
        border-collapse: collapse;
        width: 100%;
        table-layout: fixed; /* Fija el ancho de la tabla */
    }

        .miTabla td {
            border: 1px solid black;
            width: 50px; /* Ancho fijo para las celdas */
            white-space: nowrap; /* Evita que el contenido haga saltos de línea en las celdas */
        }

    .botonfuentes {
        border: none;
        border-color: transparent;
    }
</style>

<div class="panel panel-default"  id="DocOf">

    <div class="panel-heading">Editor de Oficio</div>
    <div class="panel-body">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Workflow.WorkflowId)
        @Html.HiddenFor(model => model.Workflow.ProcesoId)
        @Html.HiddenFor(model => model.Workflow.Proceso.OrganizacionId)

        <div class="col-md-6">
            <button id="boldButton" class="btn btn-sm botonfuentes" enable><img src="~/Content/negrita.png"></button>
            <button id="italicButton" class="btn btn-sm botonfuentes" enable><img src="~/Content/cursiva.png"></button>
            <button id="subButton" class="btn btn-sm botonfuentes" enable><img src="~/Content/subrayar.png"></button>
            <!-- <button onclick="agregarTabla()">Agregar Tabla Personalizada</button> -->
            <br /><br />
            <table>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().NUMERO_REGISTRO, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="NUMERO_REGISTRO" name="NUMERO_REGISTRO" class="form-control col-md-12 editable" contenteditable="false" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var numeroRegistro = Model.Workflow.DocOficio.FirstOrDefault()?.NUMERO_REGISTRO;
                                    @Html.Raw(numeroRegistro ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().ANTECEDENTES, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="ANTECEDENTES" name="ANTECEDENTES" class="form-control col-md-12 editable custom-editable" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var ANTECEDENTES = Model.Workflow.DocOficio.FirstOrDefault()?.ANTECEDENTES;
                                    @Html.Raw(ANTECEDENTES ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().MATERIA, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="MATERIA" name="MATERIA" class="form-control col-md-12 editable" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var MATERIA = Model.Workflow.DocOficio.FirstOrDefault()?.MATERIA;
                                    @Html.Raw(MATERIA ?? string.Empty)
                                }
                                else
                                {
                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().DE_DOC, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="DE_DOC" name="DE_DOC" class="form-control col-md-12 editable" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var DE_DOC = Model.Workflow.DocOficio.FirstOrDefault()?.DE_DOC;
                                    @Html.Raw(DE_DOC ?? string.Empty)
                                }
                                else
                                {
                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().A_DOC, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="A_DOC" name="A_DOC" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var A_DOC = Model.Workflow.DocOficio.FirstOrDefault()?.A_DOC;
                                    @Html.Raw(A_DOC ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().DIRECCION, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="DIRECCION" name="DIRECCION" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var DIRECCION = Model.Workflow.DocOficio.FirstOrDefault()?.DIRECCION;
                                    @Html.Raw(DIRECCION ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().CORREO, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="CORREO" name="CORREO" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var CORREO = Model.Workflow.DocOficio.FirstOrDefault()?.CORREO;
                                    @Html.Raw(CORREO ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Tabla, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="Tabla" name="Tabla" class="form-control col-md-12 editable2" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Tabla = Model.Workflow.DocOficio.FirstOrDefault()?.Tabla;
                                    @Html.Raw(Tabla ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="col-md-12">
                        <input type="checkbox" id="CheckboxTabla" name="CheckboxTabla" checked>
                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().TieneDirectorio, htmlAttributes: new { @class = "control-label text-left" })
                        </div>



                            <!--Html.Partial("_DirectorioEditWeb", Model.Workflow.Proceso.Organizacion)-->

</td>

                </tr>
                <tr style="display:none" id="trExtra">
                    <td>
                        <!--no olvidar IF-->
                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Parrafo2, htmlAttributes: new { @class = "control-label col-md-12" })

                        <div class="col-md-12">
                            <div id="Parrafo2" name="Parrafo2" class="form-control col-md-12 editable2" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Parrafo2 = Model.Workflow.DocOficio.FirstOrDefault()?.Parrafo2;
                                    @Html.Raw(Parrafo2 ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>

                <td>
                    <br />
                    @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Parrafo1, htmlAttributes: new { @class = "control-label col-md-6" })

                    <div class="col-md-12">
                        <div id="Parrafo1" name="Parrafo1" class="form-control col-md-12 editable2" contenteditable="true">
                            @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                            {
                                var Parrafo1 = Model.Workflow.DocOficio.FirstOrDefault()?.Parrafo1;
                                @Html.Raw(Parrafo1 ?? string.Empty)
                            }
                            else
                            {

                                @Html.Raw(string.Empty)
                            }
                        </div>
                    </div>
                </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().AUTORES, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="AUTORES" name="AUTORES" class="form-control col-md-12 editable" contenteditable="true" >
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var AUTORES = Model.Workflow.DocOficio.FirstOrDefault()?.AUTORES;
                                    @Html.Raw(AUTORES ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        <div class="col-md-6">

            @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
            {
                var firstDoc = Model.Workflow.DocOficio.FirstOrDefault();
                if (firstDoc != null && firstDoc.DocOficioId != 0)
                {
                    <embed src="@Url.Action("ShowDoc", "Task", new { id = firstDoc.WorkFlowId })" width="96%" height="990px" type="application/pdf" />
                    <br /><br />
                }
                else
                {
                    @* No hay contenido para mostrar *@
                }
            }
            else
            {
                @* No hay contenido para mostrar *@
            }
            <br />


        </div>

        <div col-md-6>
            <button id="GuardarDocOf" type="submit" class="btn btn-danger">Guardar y Visualizar</button>
        </div>

    </div>
    <div id="elemento"></div>
    @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.FirstOrDefault().TieneDirectorio)
    {
       
        <input type="hidden" id="a" value="1" />
    }else{

        <input id="a" value="0" type="hidden" />
    }


</div>


<script language="JavaScript">
    //var booleano = $("#CheckboxTabla").prop("checked") ? false : true ;
    var booleano;
    $("#CheckboxTabla").change(function () {

        
        if ($("#CheckboxTabla").is(':checked')) {
            booleano = true
            $("#trExtra").show();
        } else {
            

            booleano = false
            $("#trExtra").hide();
        }
    });

    $(document).ready(function () {
        var objeto = document.getElementById("a");
        var obje = objeto.value;
        console.log("funcion Ready ??? " + obje + " val ??");
        if (obje == 1) {
            $("#CheckboxTabla").prop("checked", true)
            $("#trExtra").show();
            console.log("checkboxtrue??? val ??" );
        } else {
            $("#CheckboxTabla").prop("checked", false)
            $("#trExtra").hide();
            console.log("checkboxfalse??? val ??" );
        }


        

        if (obje > 0) {
            
            $("#CheckboxTabla").prop("checked", true)
            $("#trExtra").show();
        }
        else {
            $("#CheckboxTabla").prop("checked", false)
            $("#trExtra").hide();

        }


        if ($(".editor-for-input").val() != null)
        {
            var texto = $(".editor-for-input").val();
            $("#divEditable").html(texto);
        }

        
     
    });

    var $Tabla = $('#Tabla');
    var $boldButton = $('#boldButton');
    var $italicButton = $('#italicButton');
    var $subButton = $('#subButton');
    //var ediDiv = $('#ediDiv');
    var $ediDiv = $('#ediDiv');

    var $guardar = $('#guardar');

    $Tabla.on('mouseup', function (e) {
        palabras(e);

    });

    $ediDiv.on('mouseup', function (e) {
        palabras(e);

    });

    function palabras(e) {
        console.log("palabra");
        var selectedText = window.getSelection().toString();

        if (selectedText.length > 0) {
            $boldButton.css({
                top: e.pageY - 20,
                left: e.pageX,

            }).show();

            $italicButton.css({
                top: e.pageY - 20,
                left: e.pageX + 60,
            }).show();

            $subButton.css({
                top: e.pageY - 20,
                left: e.pageX + 100,
            }).show();

        } else {

            $boldButton.show();
            $italicButton.show();
            $subButton.show();
        }
    };


    $boldButton.on('click', function () {
        document.execCommand('bold', false, null); // negrita
        $boldButton.show();
    });
    $italicButton.on('click', function () {
        document.execCommand('italic', false, null); // italica
        $italicButton.show();
    });
    $subButton.on('click', function () {
        document.execCommand('underline', false, null);//Subrayada
        $subButton.show();
    });

    $(document).on('click', function (e) {
        if ($(e.target).closest('#ediDiv').length === 0 && $(e.target).closest('#Tabla').length === 0 && $(e.target).closest('#boldButton').length === 0 && $(e.target).closest('#italicButton').length === 0 && $(e.target).closest('#subButton').length === 0) {
            $boldButton.show();
            $italicButton.show();
            $subButton.show();

        }
    });


    //$(document).ready(function () {
    $(document).one('click', '#GuardarDocOf', function () {



        var Tabla = document.getElementById("Tabla");
        Tabla.focus();

       // var range1 = document.createRange();
        //var range2 = document.createRange();
        var range3 = document.createRange();

        var selection = window.getSelection();

        //range1.selectNodeContents(Parrafo1);
        //range2.selectNodeContents(Parrafo2);
        range3.selectNodeContents(Tabla);

        //range1.collapse(true);
        //range2.collapse(true);
        range3.collapse(true);

        selection.removeAllRanges();
       // selection.addRange(range1);
       // selection.addRange(range2);
        selection.addRange(range3);


        // Obtén la URL actual
        var url = window.location.href;

        // Divide la URL en partes usando el carácter '?' como separador
        var parts = url.split('?');

        if (parts.length > 1) {
            // Obtiene la parte después del '?' que contiene los parámetros
            var params = parts[1];

            // Divide los parámetros usando '&' como separador
            var paramArray = params.split('&');

            // Inicializa una variable para almacenar el valor de WorkflowId
            var workflowId = null;

            // Recorre los parámetros para encontrar WorkflowId
            for (var i = 0; i < paramArray.length; i++) {
                var param = paramArray[i].split('=');
                if (param[0] === 'WorkflowId') {
                    // El valor de WorkflowId se encuentra en param[1]
                    workflowId = param[1];
                    break; // Sal del bucle una vez que lo encuentres
                }
            }

            if (workflowId !== null) {
            } else {
                console.log("WorkflowId no encontrado en la URL.");
            }
        } else {
            console.log("URL no contiene parámetros.");
        }
               var tablaElement = document.getElementById("Tabla");
               var texto = tablaElement.innerHTML;
               var div = document.createElement("div");

                 div.innerHTML = texto;
                var prueba = convertToHTML(tablaElement);
                var x = tablaElement.innerText;
                var y = x.innerHTML;

                var nuevoElemento = document.createElement("div");
                nuevoElemento.innerText = tablaElement.innerText;
                var contenidoHTML = nuevoElemento.innerHTML;


                texto = texto.replace(/^\n+/, ""); //quitar espacios al inicio
                texto = texto.replace(/<\/b>\s*<div>/g, "</b><div>");// Reemplaza los saltos de línea entre </b> y <div> con una cadena vacía
                texto = texto.replace(/<\/b><div>/g, "</b><div>");// Reemplaza cualquier ocurrencia adicional de </b><div> con una cadena vacía
                texto = texto.replace(/\n+/g, ' ');  // Reemplaza múltiples saltos de línea con un espacio
                texto = texto.replace(/\s+/g, ' ');  // Reemplaza múltiples espacios con un solo espacio

                var mate = document.getElementById("MATERIA").innerHTML.trim();
                mate = mate.replace(/^\n+/, ""); //quitar espacios al inicio
                mate = mate.replace(/<\/b>\s*<div>/g, "</b><div>");// Reemplaza los saltos de línea entre </b> y <div> con una cadena vacía
                mate = mate.replace(/<\/b><div>/g, "</b><div>");// Reemplaza cualquier ocurrencia adicional de </b><div> con una cadena vacía
                mate = mate.replace(/\n+/g, ' ');  // Reemplaza múltiples saltos de línea con un espacio
                mate = mate.replace(/\s+/g, ' ');  // Reemplaza múltiples espacios con un solo espacio */
                //booleano = (booleano != null && booleano == true) ? false : true;

                 var proce=@Model.Workflow.ProcesoId;
                 var data = {

                     ProcesoId: proce,
                        NUMERO_REGISTRO: document.getElementById("NUMERO_REGISTRO").innerHTML.trim(),
                        ANTECEDENTES: document.getElementById("ANTECEDENTES").innerHTML.trim(),
                        MATERIA: mate, //document.getElementById("MATERIA").innerHTML.trim(),
                        DE_DOC: document.getElementById("DE_DOC").innerHTML.trim(),
                        A_DOC: document.getElementById("A_DOC").innerHTML.trim(),
                        DIRECCION: document.getElementById("DIRECCION").innerHTML.trim(),
                        CORREO: document.getElementById("CORREO").innerHTML.trim(),
                        Parrafo1: document.getElementById("Parrafo1").innerHTML.trim(),
                        AUTORES: document.getElementById("AUTORES").innerHTML.trim(),
                        WorkflowId: workflowId,
                        Parrafo2: document.getElementById("Parrafo2").innerHTML.trim(),
                        //Parrafo3: document.getElementById("Parrafo3").innerHTML.trim(),
                        DocOficioId: null,
                        Tabla: texto,//contenidoHTML,//document.getElementById("Tabla").innerHTML,
                        Content :null,
                        FileName :null,
                        FechaCreacion: null,
                       TieneDirectorio: booleano

            };
            console.log("llamando al metodo  \n:");

            $.ajax({
                type: "POST",
                url: "/Task/GuardarDocOfi" ,
                data: data,
                
                success: function (result) {
                    $("#DocOf").html(result);
                    init();
                    $("#boldButton").prop("disabled", false);
                    $("#italicButton").prop("disabled", false);
                    $("#subButton").prop("disabled", false);

                }
            });
       // });
    });

    function convertToHTML(element) {
        var container = document.createElement('div');
        container.appendChild(element.cloneNode(true));
        return container.innerHTML;
    }

    function init() {
        var objeto = document.getElementById("a");

        var obje = objeto.value;
        console.log("valor del obje ?? " + obje + " val abajo ??");
        if (obje == 1) {
            $("#CheckboxTabla").prop("checked", true)
            $("#trExtra").show();
            console.log("checkboxtrue??? val abajo ??");
        } else {
            $("#CheckboxTabla").prop("checked", false)
            $("#trExtra").hide();
            console.log("checkboxfalse??? val  abajo ??");
        }


        

        if (obje > 0) {

            $("#CheckboxTabla").prop("checked", true)
            console.log("obje mayor 0??? val abajo ??");
            $("#trExtra").show();
        }
        else {
            $("#CheckboxTabla").prop("checked", false)
            console.log("obje menor a  0??? val abajo ??");
            $("#trExtra").hide();

        }


        if ($(".editor-for-input").val() != null) {
            var texto = $(".editor-for-input").val();
            $("#divEditable").html(texto);
        }

        



    }

</script>


<!--FIN-->
