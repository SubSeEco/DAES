<!--INI-->
@model DAES.Web.BackOffice.Controllers.TaskModel

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<title> Editor </title>

<style type="text/css">
    .editable {
        border: 1px solid #ccc;
        padding: 10px;
        width: 500px;
        height: auto;
        display: inline-block;
        word-wrap: break-word;
        margin-bottom: 20px;
    }

    .tooltip {
        display: none;
        position: absolute;
        z-index: 10;
        box-shadow: 3px 2px 10px 1px #b0b0b0;
    }

    .rich-text-content div {
        margin-bottom: 10px;
    }

    .rich-text-content br {
        display: block;
        content: "";
        margin-bottom: 10px;
    }

    .miTabla {
        border-collapse: collapse;
        width: 100%;
        table-layout: fixed; /* Fija el ancho de la tabla */
    }

        .miTabla td {
            border: 1px solid black;
            width: 50px; /* Ancho fijo para las celdas */
            white-space: nowrap; /* Evita que el contenido haga saltos de línea en las celdas */
        }
</style>

<div class="panel panel-default">

    <div class="panel-heading">Formulario Innova</div>
    <div class="panel-body">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Workflow.WorkflowId)
        @Html.HiddenFor(model => model.Workflow.ProcesoId)
        @Html.HiddenFor(model => model.Workflow.Proceso.OrganizacionId)

        <div class="col-md-6">
            <button id="boldButton" class="btn btn-danger">Negrita</button>
            <button id="italicButton" class="btn btn-danger">Italic</button>
            <button id="subButton" class="btn btn-danger">Subrayar</button>
            <!-- <button onclick="agregarTabla()">Agregar Tabla Personalizada</button> -->

            <table>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().NUMERO_REGISTRO, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="NUMERO_REGISTRO" name="NUMERO_REGISTRO" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var numeroRegistro = Model.Workflow.DocOficio.FirstOrDefault()?.NUMERO_REGISTRO;
                                    @Html.Raw(numeroRegistro ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().ANTECEDENTES, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="ANTECEDENTES" name="ANTECEDENTES" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var ANTECEDENTES = Model.Workflow.DocOficio.FirstOrDefault()?.ANTECEDENTES;
                                    @Html.Raw(ANTECEDENTES ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().MATERIA, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="MATERIA" name="MATERIA" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var MATERIA = Model.Workflow.DocOficio.FirstOrDefault()?.MATERIA;
                                    @Html.Raw(MATERIA ?? string.Empty)
                                }
                                else
                                {
                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().DE_DOC, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="DE_DOC" name="DE_DOC" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var DE_DOC = Model.Workflow.DocOficio.FirstOrDefault()?.DE_DOC;
                                    @Html.Raw(DE_DOC ?? string.Empty)
                                }
                                else
                                {
                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().A_DOC, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="A_DOC" name="A_DOC" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var A_DOC = Model.Workflow.DocOficio.FirstOrDefault()?.A_DOC;
                                    @Html.Raw(A_DOC ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().DIRECCION, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="DIRECCION" name="DIRECCION" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var DIRECCION = Model.Workflow.DocOficio.FirstOrDefault()?.DIRECCION;
                                    @Html.Raw(DIRECCION ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().CORREO, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="CORREO" name="CORREO" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var CORREO = Model.Workflow.DocOficio.FirstOrDefault()?.CORREO;
                                    @Html.Raw(CORREO ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Parrafo1, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="Parrafo1" name="Parrafo1" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Parrafo1 = Model.Workflow.DocOficio.FirstOrDefault()?.Parrafo1;
                                    @Html.Raw(Parrafo1 ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Parrafo2, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            <div id="Parrafo2" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Parrafo2 = Model.Workflow.DocOficio.FirstOrDefault()?.Parrafo2;
                                    @Html.Raw(Parrafo2 ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Parrafo3, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            <div id="Parrafo3" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Parrafo3 = Model.Workflow.DocOficio.FirstOrDefault()?.Parrafo3;
                                    @Html.Raw(Parrafo3 ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>

                        @Html.LabelFor(model => model.Workflow.DocOficio.FirstOrDefault().Tabla, htmlAttributes: new { @class = "control-label col-md-6" })

                        <div class="col-md-12">
                            <div id="Tabla" name="Tabla" class="form-control col-md-12 editable" contenteditable="true">
                                @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
                                {
                                    var Tabla = Model.Workflow.DocOficio.FirstOrDefault()?.Tabla;
                                    @Html.Raw(Tabla ?? string.Empty)
                                }
                                else
                                {

                                    @Html.Raw(string.Empty)
                                }
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        <div class="col-md-6">

            @if (Model.Workflow.DocOficio != null && Model.Workflow.DocOficio.Any())
            {
                var firstDoc = Model.Workflow.DocOficio.FirstOrDefault();
                if (firstDoc != null)
                {
                    <embed src="@Url.Action("ShowDoc", "Task", new { id = firstDoc.WorkFlowId })" width="96%" height="990px" type="application/pdf" />
                }
                else
                {
                    @* No hay contenido para mostrar *@
                }
            }
            else
            {
                @* No hay contenido para mostrar *@
            }
            <br />


        </div>
        <div>
            <button id="GuardarDocOf" type="submit" class="btn btn-danger">Vista Previa</button>
        </div>

    </div>













    <div id="elemento"></div>




</div>
<script language="JavaScript">


    $(document).ready(function () {
        console.log($('#prueba').val());
        if ($(".editor-for-input").val() != null)
        {
            console.log("entre en el if ");
            var texto = $(".editor-for-input").val();
            $("#divEditable").html(texto);
        }



        var $Parrafo1 = $('#Parrafo1');
        var $Parrafo2 = $('#Parrafo2');
        var $Tabla = $('#Tabla');
        var $boldButton = $('#boldButton');
        var $italicButton = $('#italicButton');
        var $subButton = $('#subButton');
        //var ediDiv = $('#ediDiv');
        var $ediDiv = $('#ediDiv');









        var $guardar = $('#guardar');

        $Parrafo1.on('mouseup', function (e) {
            palabras(e);

        });
        $Parrafo2.on('mouseup', function (e) {
            palabras(e);

        });
        $Tabla.on('mouseup', function (e) {
            palabras(e);

        });

        $ediDiv.on('mouseup', function (e) {
            palabras(e);

        });

        function palabras(e) {

            var selectedText = window.getSelection().toString();

            if (selectedText.length > 0) {
                console.log("soy los botones");
                $boldButton.css({
                    top: e.pageY - 20,
                    left: e.pageX,

                }).show();

                $italicButton.css({
                    top: e.pageY - 20,
                    left: e.pageX + 60,
                }).show();

                $subButton.css({
                    top: e.pageY - 20,
                    left: e.pageX + 100,
                }).show();

            } else {

                $boldButton.show();
                $italicButton.show();
                $subButton.show();
            }
        };


        $boldButton.on('click', function () {
            document.execCommand('bold', false, null); // negrita
            $boldButton.show();
        });
        $italicButton.on('click', function () {
            document.execCommand('italic', false, null); // italica
            $italicButton.show();
        });
        $subButton.on('click', function () {
            document.execCommand('underline', false, null);//Subrayada
            $subButton.show();
        });

        $(document).on('click', function (e) {
            if ($(e.target).closest('#ediDiv').length === 0 && $(e.target).closest('#Parrafo1').length === 0 && $(e.target).closest('#Parrafo2').length === 0 && $(e.target).closest('#Tabla').length === 0 && $(e.target).closest('#boldButton').length === 0 && $(e.target).closest('#italicButton').length === 0 && $(e.target).closest('#subButton').length === 0) {
                $boldButton.show();
                $italicButton.show();
                $subButton.show();

            }
        });
    });



    $(document).ready(function () {

        var Parrafo1 = document.getElementById("Parrafo1");
        Parrafo1.focus();

        var Parrafo2 = document.getElementById("Parrafo2");
        Parrafo2.focus();

        var Tabla = document.getElementById("Tabla");
        Tabla.focus();

        var range1 = document.createRange();
        var range2 = document.createRange();
        var range3 = document.createRange();

        var selection = window.getSelection();

        range1.selectNodeContents(Parrafo1);
        range2.selectNodeContents(Parrafo2);
        range3.selectNodeContents(Tabla);

        range1.collapse(true);
        range2.collapse(true);
        range3.collapse(true);

        selection.removeAllRanges();
        selection.addRange(range1);
        selection.addRange(range2);
        selection.addRange(range3);

        var contenido1 = Parrafo1.textContent;
        contenido1 = contenido1.replace(/^\n+/, "");
        Parrafo1.textContent = contenido1;


        var contenido2 = Parrafo2.textContent;
        contenido2 = contenido2.replace(/^\n+/, "");
        Parrafo2.textContent = contenido2;

        //var contenido3 = Tabla.textContent;
        //contenido3 = contenido3.replace(/^\n+/, "");
        //Tabla.textContent = contenido3;




        // Obtén la URL actual
        var url = window.location.href;

        // Divide la URL en partes usando el carácter '?' como separador
        var parts = url.split('?');

        if (parts.length > 1) {
            // Obtiene la parte después del '?' que contiene los parámetros
            var params = parts[1];

            // Divide los parámetros usando '&' como separador
            var paramArray = params.split('&');

            // Inicializa una variable para almacenar el valor de WorkflowId
            var workflowId = null;

            // Recorre los parámetros para encontrar WorkflowId
            for (var i = 0; i < paramArray.length; i++) {
                var param = paramArray[i].split('=');
                if (param[0] === 'WorkflowId') {
                    // El valor de WorkflowId se encuentra en param[1]
                    workflowId = param[1];
                    break; // Sal del bucle una vez que lo encuentres
                }
            }

            if (workflowId !== null) {
                // Realiza tu lógica con el valor de WorkflowId
                console.log("Valor de WorkflowId: " + workflowId);
            } else {
                console.log("WorkflowId no encontrado en la URL.");
            }
        } else {
            console.log("URL no contiene parámetros.");
        }

            $("#GuardarDocOf").click(function () {
                console.log("estoy arriba del data ");
                console.log("numero" + NUMERO_REGISTRO + " antecedentes " + ANTECEDENTES);
                console.log("procesoId " + @Model.Workflow.ProcesoId);
                var tablaElement = document.getElementById("Tabla");

                console.log("tabla" + tablaElement);
                var texto = tablaElement.innerHTML;

                //texto = texto.replace(/<[^>]*>/g, '');
                //texto = texto.replace(/style="[^"]*"/g, '');
                //var cart_div = document.getElementById("Tabla").innerHTML();
                var div = document.createElement("div");

                div.innerHTML = texto;
                console.log("soy el div \n:" + div);
                var prueba = convertToHTML(tablaElement);
                var x = tablaElement.innerText;
                var y = x.innerHTML;



                var nuevoElemento = document.createElement("div");
                nuevoElemento.innerText = tablaElement.innerText;
                var contenidoHTML = nuevoElemento.innerHTML;

                //console.log("este es el sin div pero con br \n:" + contenidoHTML);
                // var contenidoEnriquecido = div.textContent;
                console.log("este es el que tiene div  \n:" + texto);
                //console.log("texto enriquecido" + contenidoEnriquecido);
                texto = texto.replace(/^\n+/, ""); //quitar espacios al inicio
                texto = texto.replace(/<\/b>\s*<div>/g, "</b><div>");// Reemplaza los saltos de línea entre </b> y <div> con una cadena vacía
                texto = texto.replace(/<\/b><div>/g, "</b><div>");// Reemplaza cualquier ocurrencia adicional de </b><div> con una cadena vacía
                texto = texto.replace(/\n+/g, ' ');  // Reemplaza múltiples saltos de línea con un espacio
                texto = texto.replace(/\s+/g, ' ');  // Reemplaza múltiples espacios con un solo espacio

                var mate = document.getElementById("MATERIA").innerHTML.trim();
                mate = mate.replace(/^\n+/, ""); //quitar espacios al inicio
                mate = mate.replace(/<\/b>\s*<div>/g, "</b><div>");// Reemplaza los saltos de línea entre </b> y <div> con una cadena vacía
                mate = mate.replace(/<\/b><div>/g, "</b><div>");// Reemplaza cualquier ocurrencia adicional de </b><div> con una cadena vacía
                mate = mate.replace(/\n+/g, ' ');  // Reemplaza múltiples saltos de línea con un espacio
                mate = mate.replace(/\s+/g, ' ');  // Reemplaza múltiples espacios con un solo espacio

                  var proce=@Model.Workflow.ProcesoId;
                 var data = {
                              //var valorDiv = $("#miDiv").text();


                     ProcesoId: proce,
                        NUMERO_REGISTRO: document.getElementById("NUMERO_REGISTRO").innerHTML.trim(),
                     ANTECEDENTES: document.getElementById("ANTECEDENTES").innerHTML.trim(),
                     MATERIA: mate, //document.getElementById("MATERIA").innerHTML.trim(),
                        DE_DOC: document.getElementById("DE_DOC").innerHTML.trim(),
                     A_DOC: document.getElementById("A_DOC").innerHTML.trim(),
                     DIRECCION: document.getElementById("DIRECCION").innerHTML.trim(),
                     CORREO: document.getElementById("CORREO").innerHTML.trim(),
                        Parrafo1: document.getElementById("Parrafo1").innerHTML.trim(),
                        WorkflowId: workflowId,
                        Parrafo2: document.getElementById("Parrafo2").innerHTML.trim(),
                        Parrafo3: document.getElementById("Parrafo3").innerHTML.trim(),
                     DocOficioId: null,
                     Tabla: texto,//contenidoHTML,//document.getElementById("Tabla").innerHTML,
                        Content :null,
                        FileName :null,
                        FechaCreacion :null


                            //tabla: document.getElementById("Tabla").innerHTML

                };
            $.ajax({
                type: "POST",
                url: "/Task/GuardarDocOfi",
                data : data ,
                success: function (result) {
                    $("#elemento").html(result);
                }
            });


            });
    });

    function convertToHTML(element) {
        var container = document.createElement('div');
        container.appendChild(element.cloneNode(true));
        return container.innerHTML;
    }
    /*
    function agregarTabla() {
        // Solicitar al usuario las dimensiones de la tabla
        var filas = prompt("Ingrese el número de filas:", "");
        var columnas = prompt("Ingrese el número de columnas:", "");

        // Validar las entradas del usuario
        if (isNaN(filas) || isNaN(columnas) || filas <= 0 || columnas <= 0) {
            alert("Por favor, ingrese números válidos y mayores que cero.");
            return;
        }

        // Crear una tabla dinámica con la clase "miTabla"
        var nuevaTabla = '<br/><table class="miTabla">';

        for (var i = 0; i < filas; i++) {
            nuevaTabla += '<tr>';
            for (var j = 0; j < columnas; j++) {
                nuevaTabla += '<td>&nbsp;</td>'; // Añade un espacio en blanco a cada celda
            }
            nuevaTabla += '</tr>';
        }

        nuevaTabla += '</table>';

        // Agregar la nueva tabla al contenido del div editable
        document.getElementById('Tabla').innerHTML += nuevaTabla;
    }*/
    /*
    function agregarTabla(filas, columnas) {
        var filas = prompt("Ingrese el número de filas:", "3");
        var columnas = prompt("Ingrese el número de columnas:", "4");

        // Crear una tabla dinámica con la clase "miTabla"
        var nuevaTabla = '<br/><table class="miTabla">';

        for (var i = 0; i < filas; i++) {
            nuevaTabla += '<tr>';
            for (var j = 0; j < columnas; j++) {
                nuevaTabla += '<td>&nbsp;</td>'; // Añade un espacio en blanco a cada celda
            }
            nuevaTabla += '</tr>';
        }

        nuevaTabla += '</table>';

        // Agregar la nueva tabla al contenido del div editable
        document.getElementById('Tabla').innerHTML += nuevaTabla;
    }*/
</script>


<!--FIN-->
